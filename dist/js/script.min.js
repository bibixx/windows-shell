!function e(t,n,i){function r(o,s){if(!n[o]){if(!t[o]){var c="function"==typeof require&&require;if(!s&&c)return c(o,!0);if(a)return a(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var d=n[o]={exports:{}};t[o][0].call(d.exports,function(e){var n=t[o][1][e];return r(n?n:e)},d,d.exports,e,t,n,i)}return n[o].exports}for(var a="function"==typeof require&&require,o=0;o<i.length;o++)r(i[o]);return r}({1:[function(e,t,n){"use strict";function i(e){return e*e*e}function r(e,t){return a(i(e)+i(t))}Object.defineProperty(n,"__esModule",{value:!0}),n.square=i,n.diag=r;var a=n.sqrt=Math.sqrt},{}],2:[function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e){return document.querySelector(e)}var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),o=(e("./lib"),r("textarea#hidden")),s=function(){function e(){return i(this,e),this.commands={echo:{call:this._echo,desc:"Displays messages, or turns command echoing on or off."},help:{call:this._help,desc:"Provides gelp information for Windows commands."},cls:{call:this._clear,desc:"Clears the screen."}},this.activeEl={},this._createWindow(),this._print(["Microsoft Windows [Version 10.0.10586]","(c) 2015 Microsoft Corporation. All rights reserved."]),this._addListeners(),this}return a(e,[{key:"_createWindow",value:function(){var e=document,t=e.createElement("div");t.setAttribute("class","window"),t.setAttribute("tabindex","1");var n=e.createElement("div");n.setAttribute("class","window-header");var i=e.createElement("div");i.setAttribute("class","icon");var r=e.createElement("div");r.setAttribute("class","icon-header");var a=e.createElement("div");a.setAttribute("class","dots");var o=e.createElement("div");o.setAttribute("class","icon-main");var s=e.createElement("span");s.appendChild(e.createTextNode("C:\\")),o.appendChild(s),i.appendChild(r),r.appendChild(a),i.appendChild(r),i.appendChild(o);var c=e.createElement("div");c.setAttribute("class","controls");var l=e.createElement("div");l.setAttribute("id","min"),l.setAttribute("title","Minimize");var d=e.createElement("div");d.setAttribute("id","max"),d.setAttribute("title","Maximize");var u=e.createElement("div");u.setAttribute("id","close"),u.setAttribute("title","Close"),c.appendChild(l),c.appendChild(d),c.appendChild(u);var p=e.createElement("span");p.appendChild(e.createTextNode("C:\\Windows\\system32\\cmd.exe"));var h=e.createElement("div");h.setAttribute("class","window-main"),n.appendChild(i),n.appendChild(p),n.appendChild(c),t.appendChild(n),t.appendChild(h),this.windowMain=h,this.windowEl=t,e.body.appendChild(t)}},{key:"_output",value:function(e){var t=this.windowMain,n=document.createElement("p");n.setAttribute("class","line"),n.innerHTML=e,t.appendChild(n)}},{key:"_print",value:function(e,t){var n=this;this.activeEl.nodeName&&this.activeEl.removeAttribute("id"),t="undefined"==typeof t||t,e=e||[],e.concat([""]).forEach(function(e){n._output(e)});var i=document.createElement("p");i.setAttribute("class","line"),i.setAttribute("id","active"),i.innerHTML="C:\\Users\\Bartek><span class='command'></span>",t&&(this.windowMain.appendChild(i),this.windowMain.scrollTop=this.windowMain.scrollHeight,this.activeEl=i)}},{key:"_getCommand",value:function(e){var t=e.split(" "),n=t[0].toLowerCase();"undefined"!=typeof this.commands[n]?this._print(this.commands[n].call(this,t.slice(1))):this._print(["'"+t[0]+"' is not recognized as an internal or external command,<br>operable program or batch file."])}},{key:"_addListeners",value:function(){var e=this;this.windowEl.addEventListener("focus",function(e){o.focus()}),this.windowEl.addEventListener("click",function(e){o.focus()}),o.addEventListener("keyup",function(t){var n=e.activeEl,i=o.value.replace(/\n/g,"");o.value=i,13!==t.keyCode?n.children[0].innerHTML=i:(e._getCommand(i),o.value="")})}},{key:"_echo",value:function(e,t){return[t.join("")]}},{key:"_help",value:function(e,t){var n=e.commands,i=[],r=[],a=0;if(t.length>0);else{for(var o in n)i[o]=n[o].desc,a=Math.max(a,o.length);for(var s in i){var c=i[s];r.push(s.toUpperCase()+Array(a+3-s.length).join(" ")+c)}}return r.concat(["","For more information on tools see the command-line reference in the online help.",""])}},{key:"_clear",value:function(e){return e.windowMain.innerHTML="",""}}]),e}();new s},{"./lib":1}]},{},[2]);
//# sourceMappingURL=data:application/json;base64,
